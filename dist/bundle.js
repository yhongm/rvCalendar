!function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";var n,a=r(1),i=(n=a)&&n.__esModule?n:{default:n};window.onload=function(){(0,i.default)("#app",function(e){alert("selectDate,:"+e)})}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var r=c.getWeeks(),a=new n.default({el:e,data:{year:""+c.year,month:""+(c.month+1),weekTitles:[{id:"weekkey1",value:"一"},{id:"weekkey2",value:"二"},{id:"weekkey3",value:"三"},{id:"weekkey4",value:"四"},{id:"weekkey5",value:"五"}],weeks:r},dom:{tag:"table",props:{border:0,cellpadding:"0",cellspacing:"1",id:"caltable",key:"table",style:"text-decoration:none;width:200;background-color:#D0D0EE;font-size:8pt;border:0px dotted #1C6FF5;"},children:[{tag:"thead",props:{key:"thead"},children:[{tag:"tr",props:{align:"center",valign:"middle",id:"title",key:"title",style:"font-weight:normal;height:24px;text-align:center;color:#333333;text-decoration:none;background-color:#A4B9D7;border-top-width:1px;border-right-width:1px;border-bottom-width: 1px; border-left-width: 1px;border-bottom-style: 1px;border-top-color: #999999;border-right-color: #999999;border-bottom-color:#999999;border-left-color:#999999;"},children:[{tag:"td",props:{colspan:"7",key:"tdTitle"},children:[{tag:"div",props:{key:"titleDiv"},children:[{tag:"button",props:{onclick:"mCalendar.subMonth()",style:"font-weight:bold; color:#243F65;cursor:hand;text-decoration:none;",key:"subButton"},children:["<"]},{tag:"input",props:{name:"year",type:"text",maxlength:"4",style:"font-size: 9pt; text-decoration: none;background-color: #FFFFFF;height: 20px;border: 1px solid #666666; color: #000000;",size:"4",value:"%#year#%",key:"inputYear"},children:[""]},{tag:"input",props:{name:"month",type:"text",maxlength:"2",value:"%#month#%",style:"font-size: 9pt; text-decoration: none;background-color: #FFFFFF;height: 20px;border: 1px solid #666666; color: #000000;",size:"2",key:"inputMonth"},children:[""]},{tag:"button",props:{onclick:"mCalendar.addMonth()",style:"font-weight: bold;color: #243F65;cursor: hand;text-decoration: none;",key:"addButton"},children:[">"]}]}]}]},{tag:"tr",props:{key:"daytr"},children:[{tag:"td",props:{style:"color: #FF0000;text-decoration: none;background-color: #C0D0E8;text-align: center;height: 20px;width: 12%;",key:"daySunTitle"},children:["日"]},{tag:"td",props:{style:"color:#000000;background-color:#C0D0E8;height:20px;width:11%;text-align:center;",key:"%#v.id#%",for:"v _in_ weekTitles"},children:["%#v.value#%"]},{tag:"td",props:{style:" color:#FF0000;text-decoration:none;background-color:#C0D0E8;text-align:center;height: 20px;width: 12%;",key:"daySatTitle"},children:["六"]}]}]},{tag:"tbody",props:{cellspacing:"0",cellpadding:"0",id:"calendar",style:" text-decoration: none;width: 170;background-color: #C0D0E8;font-size: 9pt;border: 0px dotted #1C6FA5;",align:"center",border:"1",key:"tbody"},children:[{tag:"tr",props:{style:"cursor:hand",key:"%#week.id#%",for_for:"week _in_ weeks"},children:[{tag:"td",props:{key:"%#v.id#%",onclick:"clickDay(this)",style:"%#v.style#%",lable:"%#v.lable#%",onMouseover:"mouseOver(this);",onMouseOut:"mouseOut(this);",childDomData:"v",for:"v _in"},children:[{tag:"p",props:{key:"{new Date()/100}"},children:["%#v.content#%"]},{tag:"p",props:{key:"{new Date()/100}"},children:["%#v.lunarInfo#%"]}]}]}]}]}}),i=c.month,o=c.year,b=c.selectDay;Object.defineProperty(c,"month",{set:function(e){console.log("newMonth:"+e),i!=e&&(i=e,a.data.weeks=c.getWeeks(),a.data.month=e+1)},get:function(){return i}}),Object.defineProperty(c,"year",{set:function(e){o!=e&&(console.log("newYear:"+e),o=e,a.data.weeks=c.getWeeks(),a.data.year=e)},get:function(){return o}}),Object.defineProperty(c,"selectDay",{set:function(e){b!=e&&(b=e,t(e))},get:function(){return b}})};var n=i(r(2)),a=i(r(3));function i(e){return e&&e.__esModule?e:{default:e}}function o(){this.months=new Array("一","二","三","四","五","六","七","八","九","十","十一","十二"),this.dayCounts=new Array(31,28,31,30,31,30,31,31,30,31,30,31),this.days=new Array("日","一","二","三","四","五","六"),this.today=this.getToday(),this.year=this.today.year,this.month=this.today.month,this.newCal=new Date,this.selectDay=this.newCal,this.day=-1,this.startDay=0,this.daily=0,this.rv=void 0,this.today.year==this.newCal.getFullYear()&&this.today.month==this.newCal.getMonth()&&(this.day=this.today.day)}o.prototype.getWeeks=function(){this.newCal=new Date(this.year,this.month,1),this.day=-1,this.startDay=this.newCal.getDay(),this.daily=0,this.today.year==this.newCal.getFullYear()&&this.today.month==this.newCal.getMonth()&&(this.day=this.today.day);for(var e=this.getDayCounts(this.newCal.getMonth(),this.newCal.getFullYear()),t=[],r=0;r<6;r++){var n=[];n.id="week_row_"+r;for(var i=0;i<7;i++){var o={},c="",b="",f="",s="week_day_"+r+i;i==this.startDay&&0==this.daily&&(this.daily=1),this.day==this.daily?(b="font-weight:bold;color:#000000;background-color:#FFFFFF;height:20px;text-align:center",f="current"):6==i?(b="color:#FF0000;text-decoration:none;background-color:#E5E9F2;text-align:center;height:18px;width:12%",f="sat"):0==i?(b="color: #FF0000;text-decoration:none;background-color:#E5E9F2;text-align:center;height:18px;width:12%",f="sun"):(b="color:#243F65;background-color:#E5E9F2;height:20px;width:11%;text-align:center",f="normal"),this.daily>0&&this.daily<=e?(c=this.daily+"",this.daily++):(b="color:#000000;background-color: #f6f6f6;height:20px;width: 11%;text-align:center",c=""),o.content=c,o.id=s,o.lable=f,o.style=b;var l=a.default.getLunar(this.year,this.month,this.day);o.content=c,o.id=s,o.lable=f,o.style=b;var d="";d=""!=l.calendaricity?l.calendaricity:l.solarHoliday?l.solarHoliday:l.lunarHoliday?l.lunarHoliday:l.chinaMonth+l.chinaDay,o.lunarInfo=d,n.push(o)}t.push(n),window.weeks=t}return t},o.prototype.getDayCounts=function(e,t){return 1==e?0==t%4&&0!=t%100||0==t%400?29:28:this.dayCounts[e]},o.prototype.getToday=function(){var e={},t=new Date;return e.now=t,e.year=t.getFullYear(),e.month=t.getMonth(),e.day=t.getDate(),e},o.prototype.subMonth=function(){this.month-1<0?(this.month=11,this.year=this.year-1):this.month=this.month-1,console.log("month:"+this.month)},o.prototype.addMonth=function(){this.month+1>11?(this.month=0,this.year=this.year+1):this.month=this.month+1},o.prototype.setMonth=function(e){e<1||e>12?alert("月份必须在1-12之间!"):this.month=e},o.prototype.setYear=function(e){this.year=e},window.mouseOver=function(e){e.style.color="#FFFFFF"},window.mouseOut=function(e){var t=e.getAttribute("lable");e.style.color="sat"==t||"sun"==t?"#FF0000":"#000000"};var c=new o;window.mCalendar=c,window.clickDay=function(e){if(""!=e.innerText){var t=new Date(c.year,c.month,e.innerText);c.selectDay=t}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var NODE_REPLACE=0,CHILD_RE_ORDER=1,NODE_PROPS=2,NODE_CONTENT=3,Element=function(){function e(t,r,n){if(_classCallCheck(this,e),!(this instanceof e))return new e(tagName,r,n);if(this.tag=t,this.props=r||{},this.children=n||[],this.key=r?r.key:void 0,!this.key)throw new Error(t+" ... html tag the key is undefined");var a=0;this.children.forEach(function(t){t instanceof e&&(a+=t.count),a++}),this.count=a}return _createClass(e,[{key:"render",value:function(){var t=document.createElement(this.tag),r=this.props;for(var n in r)Util.setAttr(t,n,r[n]);return this.children.forEach(function(r){var n=r instanceof e?r.render():document.createTextNode(r);t.appendChild(n)}),t}}]),e}(),Diff=function(){function e(t,r){_classCallCheck(this,e),this.index=0,this.patches={},this.dfsWalk(t,r,this.index)}return _createClass(e,[{key:"dfsWalk",value:function(e,t,r){var n=[];if(null==t);else if(Util.isString(e)&&Util.isString(t))e!=t&&n.push({type:NODE_CONTENT,content:t});else if(e.tagName===t.tagName&&e.key==t.key){var a=this.diffProps(e,t);a&&n.push({type:NODE_PROPS,props:a}),Util.isIgnoreChildren(t)||this.diffChildren(e.children,t.children,r,n)}else n.push({type:NODE_REPLACE,node:t});n.length&&(this.patches[r]=n)}},{key:"diffProps",value:function(e,t){var r=e.props,n=t.props,a={},i=!0;for(var o in r)n[o]!==r[o]&&(i=!1,a[o]=n[o]);for(var c in n)r.hasOwnProperty(c)||(i=!1,a[c]=n[c]);return i?null:a}},{key:"diffChildren",value:function(e,t,r,n){var a=this,i=new DiffList(e,t).getResult();if(t=i.child,i.moves.length){var o={type:CHILD_RE_ORDER,moves:i.moves};n.push(o)}var c=null,b=r;e.forEach(function(e,r){var n=t[r];b=c&&c.count?b+c.count+1:b+1,a.dfsWalk(e,n,b),c=e})}}]),e}(),Patch=function(){function e(t,r){_classCallCheck(this,e);this.dfsWalk(t,{index:0},r)}return _createClass(e,[{key:"dfsWalk",value:function(e,t,r){for(var n=r[t.index],a=e.childNodes?e.childNodes.length:0,i=0;i<a;i++){var o=e.childNodes[i];t.index++,this.dfsWalk(o,t,r)}n&&this.applyPatches(e,n)}},{key:"applyPatches",value:function(e,t){var r=this;t.forEach(function(t){switch(t.type){case NODE_REPLACE:var n=Util.isString(t.node)?document.createTextNode(t.node):t.node.render();e.parentNode.replaceChild(n,e);break;case CHILD_RE_ORDER:r.reorderChildren(e,t.moves);break;case NODE_PROPS:r.setProps(e,t.props);break;case NODE_CONTENT:e.textContent?e.textContent=t.content:e.nodeValue=t.content}})}},{key:"reorderChildren",value:function(e,t){var r=Util.toArray(e.childNodes),n={};r.forEach(function(e){if(1===e.nodeType){var t=e.getAttribute("key");t&&(n[t]=e)}}),t.forEach(function(t){var a=t.index;if(0===t.type)r[a]===e.childNodes[a]&&e.removeChild(e.childNodes[a]),r.splice(a,1);else if(1===t.type){var i=n[t.item.key]?n(t.item.key).cloneNode(!0):Util.isString(t.item)?document.createTextNode(t.item):t.item.render();r.splice(a,0,i),e.insertBefore(i,e.childNodes[a]||null)}})}},{key:"setProps",value:function(e,t){for(var r in t)if(void 0===t[r])e.removeAttribute(r);else{var n=t[r];Util.setAttr(e,r,n)}}}]),e}(),Util=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"isString",value:function(e){return"string"==typeof e}},{key:"toArray",value:function(e){if(!e)return[];for(var t=[],r=0;r<e.length;r++)t.push(e[r]);return t}},{key:"isForIn",value:function(e){return/^\w* _in_ \w*$/.test(e)}},{key:"isForForIn",value:function(e){return/^\w* _in*$/.test(e)}},{key:"isForOrForFor",value:function(e){return/^\w* _in_ \w|_in*$/.test(e)}},{key:"isIgnoreChildren",value:function(e){return e.props&&e.props.hasOwnProperty("ignore")}},{key:"setAttr",value:function(e,t,r){switch(t){case"style":e.style.cssText=r;break;case"value":var n=e.tagName||"";"input"===(n=n.toLowerCase())||"textarea"===n?e.value=r:e.setAttribute(t,r);break;default:e.setAttribute(t,r)}}}]),e}(),DiffList=function(){function e(t,r){_classCallCheck(this,e);var n=this.makeKeyIndex(t).keyIndex,a=this.makeKeyIndex(r).keyIndex;this.moveOperator=[],this.childList=[];for(var i=0;i<t.length;i++){var o=t[i],c=this.getKey(o);a.hasOwnProperty(c)?this.childList.push(r[a[c]]):this.childList.push(null)}this.tempList=this.childList.slice(0);for(var b=0;b<this.tempList.length;)null===this.tempList[b]?(this.remove(b),this.removeCopyTempList(b)):b++;for(var f=0,s=0;s<r.length;s++){var l=r[s],d=this.getKey(l),h=this.tempList[f],u=this.getKey(h);if(h)if(d!=u)if(n.hasOwnProperty(d))d===getKey(this.tempList[f+1])?(this.remove(s),this.removeCopyTempList(f),f++):this.insert(s,l);else this.insert(s,l);else f++;else this.insert(s,l)}for(var p=this.tempList.length-f;f++<this.tempList.length;)p--,this.remove(p+r.length)}return _createClass(e,[{key:"makeKeyIndex",value:function(e){for(var t={},r=0;r<e.length;r++){var n=e[r];t[this.getKey(n)]=r}return{keyIndex:t}}},{key:"getKey",value:function(e){if(e)return e.key}},{key:"removeCopyTempList",value:function(e){this.tempList.splice(e,1)}},{key:"remove",value:function(e){this.moveOperator.push({index:e,type:0})}},{key:"insert",value:function(e,t){this.moveOperator.push({index:e,item:t,type:1})}},{key:"getResult",value:function(){return{moves:this.moveOperator,child:this.childList}}}]),e}();function observe(e,t,r){return Object.keys(e).forEach(function(n){var a=e[n],i=new Observable;t.put(n,i),Object.defineProperty(e,n,{get:function(){return i.add(r),a},set:function(e){var t=a!==e;a=e,t&&i.invoke()}})}),e}function Observable(){this.updateFunctions=new Set}function clone(e){var t=function(e){return null===e?"null":void 0===e?"undefined":Object.prototype.toString.call(e).slice(8,-1)},r=void 0,n=t(e);if("Object"===n)r={};else{if("Array"!==n)return e;r=[]}for(key in e){var a=e[key];"Object"==t(a)?r[key]=arguments.callee(a):"Array"==t(a)?r[key]=arguments.callee(a):r[key]=e[key]}return r}function h(e,t,r){return new Element(e,t,r)}function diff(e,t){return new Diff(e,t).patches}function patch(e,t){return new Patch(e,t)}Observable.prototype.add=function(e){this.updateFunctions.add(e)},Observable.prototype.invoke=function(){this.updateFunctions.forEach(function(e){return e()})};var Map=function(){function e(){_classCallCheck(this,e),this.length=0,this.map=new Object}return _createClass(e,[{key:"put",value:function(e,t){e in this.map||this.length++,this.map[e]=t}},{key:"get",value:function(e){return e in this.map?this.map[e]:null}},{key:"remove",value:function(e){e in this.map&&(delete this.map[e],this.length--)}},{key:"size",value:function(){return this.length}},{key:"clear",value:function(){length=0,this.map=new Object}}]),e}(),RV=function(){function RV(e){var t=this;_classCallCheck(this,RV);var r=e.el,n=e.data,a=e.dom,i=Util.isString(r)?document.querySelector(r):r;this.data=n,this.ve=this.getVirtualElement(this.applyTruthfulData(a)),this.w=this.ve.render(),i.appendChild(this.w),this.observeMap=new Map,observe(this.data,this.observeMap,function(){t.updatedom(a)}),this.updatedom(a)}return _createClass(RV,[{key:"updatedom",value:function(e){var t=this.getVirtualElement(this.applyTruthfulData(e));window.nve=t,window.ve=this.ve,patch(this.w,diff(this.ve,t)),this.ve=t}},{key:"watch",value:function(e,t){this.observeMap.get(e).add(t)}},{key:"getVirtualElement",value:function(e){var t=this,r=[];for(var n in e.children){var a=e.children[n];if(a instanceof Array)a.forEach(function(e){var n=t.getVirtualElement(e);r.push(n)});else if(a instanceof Object){var i=this.getVirtualElement(a);r.push(i)}else r.push(a)}return h(e.tag,e.props,r)}},{key:"applyTruthfulData",value:function(e){var t=this;if("for"in e.props||"for_for"in e.props){var r=[],n=!1,a=void 0;if(e.props.for){if(Util.isForOrForFor(e.props.for))if(e.forData){if(Util.isForIn(e.props.for))throw new Error("plase use _in direction");r=e.forData,a=e.props.for.split(" _in")[0],console.log("for in forfor dataSingle:"+a)}else{if(Util.isForForIn(e.props.for))throw new Error("plase use _in_ direction");r=this.data[e.props.for.split(" _in_ ")[1]],a=e.props.for.split(" _in_ ")[0],console.log("for  dataSingle:"+a)}}else{if(!e.props.for_for)throw new Error("the for direction use error");if(Util.isForOrForFor(e.props.for_for)){if(Util.isForForIn(e.props.for_for))throw new Error("plase use _in_ direction");n=!0,r=this.data[e.props.for_for.split(" _in_ ")[1]],a=e.props.for_for.split(" _in_ ")[0],console.log("for_for  dataSingle:"+a)}}var i=[];return r.forEach(function(r){var o={};for(var c in o.tag=e.tag,o.children=[],o.props={},e.children)Util.isString(e.children[c])?RV.isPlaceHolder(e.children[c])?-1==RV.getPlaceHolderValue(e.children[c]).indexOf(a)?o.children[c]=t.data[RV.getPlaceHolderValue(e.children[c])]:o.children[c]=r[RV.getPlaceHolderValue(e.children[c]).split(".")[1]]:o.children[c]=e.children[c]:(n?e.children[c].forData=r:e.children[c]instanceof Object&&(e.children[c].data=r),o.children[c]=t.applyTruthfulData(e.children[c]));var b=Object.keys(e.props);for(var f in b){var s=b[f];if("style"===s){var l=e.props[s];if(l.indexOf(",")>-1){var d=l.split(",");o.props[s]=t.handleArrayStyle(r,d,a)}else o.props[s]=t.handleSingleStyle(r,l,a)}else if("childDomData"===s){var h=e.props[s];Object.defineProperty(o,h,{value:t.data})}else RV.isPlaceHolder(e.props[s])?-1==RV.getPlaceHolderValue(e.props[s]).indexOf(a)?o.props[s]=t.data[RV.getPlaceHolderValue(e.props[s])]:o.props[s]=r[RV.getPlaceHolderValue(e.props[s]).split(".")[1]]:RV.isOperatorExpression(e.props[s])?(console.log("operaterExpress:"+RV.getOperatorExpression(e.props[s])),o.props[s]=RV.getOperatorExpression(e.props[s])):o.props[s]=e.props[s]}i.push(o)}),i}var o={};for(var c in o.tag=e.tag,o.children=[],o.props={},e.children)if(Util.isString(e.children[c]))if(RV.isPlaceHolder(e.children[c]))o.children[c]=this.data[RV.getPlaceHolderValue(e.children[c])];else if("childDomData"in Object.keys(o)){var b=Object.keys(o.childDomData)[0];value=o.childDomData[b],console.log("childDomData,value:"+value),o.children[c]=o.props.childDomData[RV.getPlaceHolderValue(e.children[c])]}else o.children[c]=e.children[c];else o.children[c]=this.applyTruthfulData(e.children[c]);var f=Object.keys(e.props);for(var s in f){var l=f[s];if("style"===l){var d=e.props[l];if(d.indexOf(",")>-1){var h=d.split(",");o.props[l]=this.handleArrayStyle(this.data,h,void 0)}else o.props[l]=this.handleSingleStyle(this.data,d,void 0)}else if("childDomData"===l){var u=e.props[l];Object.defineProperty(o,u,{value:this.data})}else RV.isPlaceHolder(e.props[l])?o.props[l]=this.data[RV.getPlaceHolderValue(e.props[l])]:RV.isOperatorExpression(e.props[l])?(console.log("operaterExpress:"+RV.getOperatorExpression(e.props[l])),o.props[l]=RV.getOperatorExpression(e.props[l])):o.props[l]=e.props[l]}return o}},{key:"handleSingleStyle",value:function(e,t,r){var n="";if(r)if(RV.isPlaceHolder(t))if(-1!=RV.getPlaceHolderValue(t).indexOf(r)){n=e[RV.getPlaceHolderValue(t).split(".")[1]]}else{var a=t.split(":")[0],i=t.split(":")[1];n=a+":"+(i=e[RV.getPlaceHolderValue(i)])}else n=t;else{var o=t.split(":")[0],c=t.split(":")[1];n=RV.isPlaceHolder(c)?o+":"+(c=e[RV.getPlaceHolderValue(c)]):t}return n}},{key:"handleArrayStyle",value:function(e,t,r){var n="",a=!0,i=!1,o=void 0;try{for(var c,b=t[Symbol.iterator]();!(a=(c=b.next()).done);a=!0){var f=c.value;n+=this.handleSingleStyle(e,f,r)+";"}}catch(e){i=!0,o=e}finally{try{!a&&b.return&&b.return()}finally{if(i)throw o}}return n}}],[{key:"isPlaceHolder",value:function(e){return!!e&&!(!e.startsWith("%#")||!e.endsWith("#%"))}},{key:"getPlaceHolderValue",value:function(e){return e.slice(2,-2)}},{key:"isOperatorExpression",value:function(e){return console.log("isOperatorExpression:"+(void 0===e?"undefined":_typeof(e))+",content:"+e),!!Util.isString(e)&&(-1!=e.indexOf("{")&&-1!=e.indexOf("}")?(console.log("isOperator true"),!0):(console.log("isOperator false"),!1))}},{key:"getOperatorExpression",value:function getOperatorExpression(content,data){if(Util.isString(content)){console.log("getOperatorExpression,content:"+content);var expression=content.slice(content.indexOf("{")+1,content.indexOf("}")),startIndex=expression.indexOf("%#"),endIndex=expression.indexOf("#%");if(console.log("content:"+content+",expression:"+expression),-1!=startIndex&&-1!=endIndex&&startIndex<endIndex){var placeHolder=expression.slice(startIndex,endIndex),realValue=data[placeHolder];expression.replace(placeHolder,realValue)}return console.log("eval expression,eval:"+eval(expression)),eval(expression)}}}]),RV}();exports.default=RV},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var a=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._yearInfo=[19416,19168,42352,21717,53856,55632,91476,22176,39632,21970,19168,42422,42192,53840,119381,46400,54944,44450,38320,84343,18800,42160,46261,27216,27968,109396,11104,38256,21234,18800,25958,54432,59984,28309,23248,11104,100067,37600,116951,51536,54432,120998,46416,22176,107956,9680,37584,53938,43344,46423,27808,46416,86869,19872,42416,83315,21168,43432,59728,27296,44710,43856,19296,43748,42352,21088,62051,55632,23383,22176,38608,19925,19152,42192,54484,53840,54616,46400,46752,103846,38320,18864,43380,42160,45690,27216,27968,44870,43872,38256,19189,18800,25776,29859,59984,27480,21952,43872,38613,37600,51552,55636,54432,55888,30034,22176,43959,9680,37584,51893,43344,46240,47780,44368,21977,19360,42416,86390,21168,43312,31060,27296,44368,23378,19296,42726,42208,53856,60005,54576,23200,30371,38608,19195,19152,42192,118966,53840,54560,56645,46496,22224,21938,18864,42359,42160,43600,111189,27936,44448,84835,37744,18936,18800,25776,92326,59984,27424,108228,43744,41696,53987,51552,54615,54432,55888,23893,22176,42704,21972,21200,43448,43344,46240,46758,44368,21920,43940,42416,21168,45683,26928,29495,27296,44368,84821,19296,42352,21732,53600,59752,54560,55968,92838,22224,19168,43476,41680,53584,62034,54560],this._astrology=["魔羯","水瓶","双鱼","白羊","金牛","双子","巨蟹","狮子","处女","天秤","天蝎","射手","魔羯"],this._dayInMonth=[31,28,31,30,31,30,31,31,30,31,30,31],this._TianGan=["甲","乙","丙","丁","戊","己","庚","辛","壬","癸"],this._DiZhi=["子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥"],this._Zodiac=["鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪"],this._calendaricity=["小寒","大寒","立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至"],this._lunarHoliday=["0101 春节","0115 元宵","0505 端午","0707 情人","0715 中元","0815 中秋","0909 重阳","1208 腊八","1224 小年","1230 除夕"],this._solarHoliday=["0101 元旦","0214 情人","0308 妇女","0312 植树","0315 消费者权益日","0401 愚人","0501 劳动","0504 青年","0512 护士","0601 儿童","0701 建党","0801 建军","0808 父亲","0910 教师","0928 孔子诞辰","1001 国庆","1006 老人","1024 联合国日","1112 孙中山诞辰纪念","1220 澳门回归纪念","1225 圣诞"],this._calendaricityTable=["9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","9778397bd19801ec9210c965cc920e","97b6b97bd19801ec95f8c965cc920f","97bd09801d98082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd197c36c9210c9274c91aa","97b6b97bd19801ec95f8c965cc920e","97bd09801d98082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec95f8c965cc920e","97bcf97c3598082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd07f595b0b6fc920fb0722","9778397bd097c36b0b6fc9210c8dc2","9778397bd19801ec9210c9274c920e","97b6b97bd19801ec95f8c965cc920f","97bd07f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c920e","97b6b97bd19801ec95f8c965cc920f","97bd07f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec9210c965cc920e","97bd07f1487f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c9274c920e","97bcf7f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c91aa","97b6b97bd197c36c9210c9274c920e","97bcf7f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c920e","97b6b7f0e47f531b0723b0b6fb0722","7f0e37f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36b0b70c9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e37f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc9210c8dc2","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0787b0721","7f0e27f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c91aa","97b6b7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c8dc2","977837f0e37f149b0723b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f5307f595b0b0bc920fb0722","7f0e397bd097c35b0b6fc9210c8dc2","977837f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0721","7f0e37f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc9210c8dc2","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0723b06bd","7f07e7f0e37f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f1487f595b0b0bb0b6fb0722","7f0e37f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e37f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0723b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0723b06bd","7f07e7f0e37f14998083b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14898082b0723b02d5","7f07e7f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e36665b66aa89801e9808297c35","665f67f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e36665b66a449801e9808297c35","665f67f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e36665b66a449801e9808297c35","665f67f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e26665b66a449801e9808297c35","665f67f0e37f1489801eb072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722"],this._chineseChar=["日","一","二","三","四","五","六","七","八","九","十"],this._chineseTenChar=["初","十","廿","卅"],this._lunarMonthTable=["正","二","三","四","五","六","七","八","九","十","冬","腊"]}return n(e,[{key:"_lunarYearDays",value:function(e){var t,r=348;for(t=32768;t>8;t>>=1)r+=this._yearInfo[e-1900]&t?1:0;return r+this._leapDaysInLunarYear(e)}},{key:"_leapMonthInLunarYear",value:function(e){return 15&this._yearInfo[e-1900]}},{key:"_leapDaysInLunarYear",value:function(e){return this._leapMonthInLunarYear(e)?65536&this._yearInfo[e-1900]?30:29:0}},{key:"_monthDays",value:function(e,t){return t>12||t<1?-1:(console.log("_monthDays:"+(this._yearInfo[e-1900]&65536>>t)),this._yearInfo[e-1900]&65536>>t?30:29)}},{key:"_getDaysInMonth",value:function(e,t){if(t>12||t<1)return-1;var r=t-1;return 1==r?e%4==0&&e%100!=0||e%400==0?29:28:this._dayInMonth[r]}},{key:"_getGanZhiYear",value:function(e){var t=(e-3)%10,r=(e-3)%12;return 0==t&&(t=10),0==r&&(r=12),this._TianGan[t-1]+this._DiZhi[r-1]}},{key:"_getAstrology",value:function(e,t){return this._astrology[e-(t<[20,19,21,21,21,22,23,23,23,23,22,22][e-1]?1:0)]+"座"}},{key:"_getGanZhi",value:function(e){return this._TianGan[e%10]+this._DiZhi[e%12]}},{key:"_getCalendaricity",value:function(e,t){if(e<1900||e>2100)return-1;if(t<1||t>24)return-1;var r=this._calendaricityTable[e-1900],n=[parseInt("0x"+r.substr(0,5)).toString(),parseInt("0x"+r.substr(5,5)).toString(),parseInt("0x"+r.substr(10,5)).toString(),parseInt("0x"+r.substr(15,5)).toString(),parseInt("0x"+r.substr(20,5)).toString(),parseInt("0x"+r.substr(25,5)).toString()],a=[n[0].substr(0,1),n[0].substr(1,2),n[0].substr(3,1),n[0].substr(4,2),n[1].substr(0,1),n[1].substr(1,2),n[1].substr(3,1),n[1].substr(4,2),n[2].substr(0,1),n[2].substr(1,2),n[2].substr(3,1),n[2].substr(4,2),n[3].substr(0,1),n[3].substr(1,2),n[3].substr(3,1),n[3].substr(4,2),n[4].substr(0,1),n[4].substr(1,2),n[4].substr(3,1),n[4].substr(4,2),n[5].substr(0,1),n[5].substr(1,2),n[5].substr(3,1),n[5].substr(4,2)];return parseInt(a[t-1])}},{key:"_getChinaMonth",value:function(e){return e>12||e<1?-1:this._lunarMonthTable[e-1]+"月"}},{key:"_getChinaDay",value:function(e){var t=void 0;switch(e){case 10:t="初十";break;case 20:t="二十";break;case 30:t="三十";break;default:t=this._chineseTenChar[Math.floor(e/10)],t+=this._chineseChar[e%10]}return t}},{key:"_getLunarHoliday",value:function(e,t){var r="";return this._lunarHoliday.forEach(function(n){var a=n.split(" ")[0],i=n.split(" ")[1],o=e+"",c=t+"",b="";e<10&&(o="0"+e),t<10&&(c="0"+t),b=o+c,console.log("lmd:"+b),a.trim()===b.trim()&&(r=i)}),r}},{key:"_getSolarHoliday",value:function(e,t){var r="";return this._solarHoliday.forEach(function(n){var a=n.split(" ")[0],i=n.split(" ")[1],o=e+"",c=t+"",b="";e<10&&(o="0"+e),t<10&&(c="0"+t),b=o+c,a.trim()===b.trim()&&(r=i)}),r}},{key:"_getZodiac",value:function(e){return this._Zodiac[(e-4)%12]}},{key:"_getLunarDayCalendaricity",value:function(e,t,r,n){var a="";return e==r&&(a=this._calendaricity[2*n-2]),t==r&&(a=this._calendaricity[2*n-1]),a}},{key:"getLunar",value:function(e,t,r){if(e<1900||e>2100)return-1;if(1900==e&&1==t&&r<31)return-1;if(e)n=new Date(e,parseInt(t)-1,r);else var n=new Date;var a,i=n.getFullYear(),o=n.getMonth()+1,c=n.getDate(),b=(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate())-Date.UTC(1900,0,31))/864e5,f=0;for(a=1900;a<2101&&b>0;a++)b-=f=this._lunarYearDays(a);b<0&&(b+=f,a--);var s=new Date,l=!1;s.getFullYear()==i&&s.getMonth()+1==o&&s.getDate()==c&&(l=!0);var d=n.getDay(),h=this._chineseChar[d];0==d&&(d=7);var u,p=a,y=this._leapMonthInLunarYear(a),v=!1;for(u=1;u<13&&b>0;u++)y>0&&u==y+1&&0==v?(--u,v=!0,f=this._leapDaysInLunarYear(p)):f=this._monthDays(p,u),1==v&&u==y+1&&(v=!1),b-=f;0==b&&y>0&&u==y+1&&(v?v=!1:(v=!0,--u)),b<0&&(b+=f,--u);var g=u,k=b+1,_=o-1,m=this._getGanZhiYear(p),w=this._getCalendaricity(i,2*o-1),x=this._getCalendaricity(i,2*o);console.log("_firstCalendaricityDay:"+w+",_secondCalendaricityDay:"+x);var D=this._getGanZhi(12*(i-1900)+o+11);c>=w&&(D=this._getGanZhi(12*(i-1900)+o+12));var C=this._getLunarDayCalendaricity(w,x,c,o),O=Date.UTC(i,_,1,0,0,0,0)/864e5+25567+10,E=this._getGanZhi(O+c-1),F=this._getAstrology(o,c);return{lunarYear:p,lunarMonth:g,lunarDay:k,zodiac:this._getZodiac(p),chinaMonth:(v?"闰":"")+this._getChinaMonth(g),chinaDay:this._getChinaDay(k),solarYear:i,solarMonth:o,solarDay:c,ganZhiYear:m,ganZhiMonth:D,ganZhiDay:E,isToday:l,isLeap:v,nWeek:d,ncWeek:"星期"+h,calendaricity:C,astro:F,lunarHoliday:this._getLunarHoliday(g,k),solarHoliday:this._getSolarHoliday(o,c)}}}]),e}());t.default=a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,